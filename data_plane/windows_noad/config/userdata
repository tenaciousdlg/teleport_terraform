#!/bin/bash
#########################################################
# amzlinux jump host for Windows Desktop
# Installs system tools for troubleshooting
#########################################################
sudo hostnamectl set-hostname ${agent_machine_name}
sudo dnf install -y net-tools vim wget
#########################################################
# teleport installation 
#########################################################
# Installs teleport enterprise edition 
TELEPORT_EDITION="${teleport_install_type}"
TELEPORT_VERSION="$(curl https://${domain}${teleport_version_channel} | sed 's/v//')"
curl https://cdn.teleport.dev/install-v$TELEPORT_VERSION.sh > /tmp/installteleport.sh
bash /tmp/installteleport.sh $TELEPORT_VERSION $TELEPORT_EDITION
if [[ "${teleport_install_upgrader}" == "true" && "${teleport_install_type}" == "enterprise" ]];     then
  yum install  teleport-ent-updater -y
fi
# Teleport does not allow periods in windows names
WINDOWS_HOST_NAME=$(echo "${windows_internal_dns}" | awk -F. '{print $1}')

#########################################################
# teleport configuration
#########################################################
 Creates teleport configuration file
sudo cat << EOF > /etc/teleport.yaml
version: v3
teleport:
  data_dir: "/var/lib/teleport"
  join_params:
    method: "${teleport_join_method}"
    token_name: "${teleport_token_name}"
  proxy_server: ${domain}:443
  log:
    output: stderr
    severity: INFO
    format:
      output: json
app_service:
  enabled: false
auth_service:
  enabled: false
db_service:
  enabled: false
discovery_service:
  enabled: true
kubernetes_service:
  enabled: false
proxy_service:
  enabled: false
ssh_service:
  enabled: true
  commands:
  - name: hostname
    command: [hostname]
    period: 1m0s
  labels:
    ${teleport_ssh_label}
    cloud: aws
    os: amz-lin
  enhanced_recording:
    enabled: ${ssh_enhanced_recording_bool}
windows_desktop_service:
  enabled: yes
  show_desktop_wallpaper: true
  static_hosts:
  - name: $WINDOWS_HOST_NAME
    ad: false
    addr: ${windows_internal_dns}
    labels:
      ${teleport_windows_label}
      cloud: aws
      os: windows
EOF

# write to file the token file if it's a token type
if [[ "${teleport_join_method}" == "token" ]];     then
  echo ${token} > ${teleport_token_name}
fi
# Sets teleport service to start at boot and brings it up
systemctl enable teleport;
systemctl restart teleport;
